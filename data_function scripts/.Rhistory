print("hello")
setwd("~/Documents/GitHub/film_networks/data_function scripts")
#load libraries
library(tidyverse)
library(quanteda) #for text cleaning
library(igraph) #for creating graphs
library(visNetwork) #for visualizing graphs
library(wordcloud) #for creating wordclouds
#load_functions
source("calculatecoocstats.R") #calculate co-occurrence statistics
source("grapher.R") #create graph
source("graphervf.R")
source("rawcounts.R") #find raw counts of co-occurrences
source("token_filter.R") #filter tokens
#load tokens, get it ready for analysis
load("token.all.RData")
#convert tokens to all lower
token.all <- tokens_tolower(token.all) #convert all tokens to lower
#sample based on min in a decade
token.all = tokens_sample(token.all, size = 22638, replace = FALSE, prob = NULL, by = decade)
token.all = token.all %>% tokens_remove(c('ex/adj', 'ex/noun'))
#create a token set with only generalized pos info
pos_replace <- function(toks.replace){
toks.replace <- toks.replace %>%
tokens_replace(pattern = c("*/NOUN", "*/VERB", "*/ADJ"), replacement = c("NOUN", "VERB", "ADJ"))
return(toks.replace)
}
token.pos <- pos_replace(token.all)
#convert tokens to all lower
token.pos <- tokens_tolower(token.pos)
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term1) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term1, term2, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('help/noun', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term1) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term1, term2, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('help/noun', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term1, term2, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('help/noun', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term1, term2, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('help/noun', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('help/noun', 'male')
plot_word_single('agent/noun', 'male')
plot_word_single('boss/noun', 'male')
plot_word_single('office/noun', 'male')
plot_word_single('lawyer/noun', 'male')
ggsave("lawyer_male.png", width = 6, height = 4)
plot_word_single('doctor/noun', 'male')
plot_word_single('boss/noun', 'male')
ggsave("boss_male.png", width = 6, height = 4)
plot_word_single('office/noun', 'male')
ggsave("office_male.png", width = 6, height = 4)
plot_word_single('wife/noun', 'male')
ggsave("wife_female.png", width = 6, height = 4)
plot_word_single('marriaGE/noun', 'male')
plot_word_single('marriage/noun', 'male')
ggsave("marriage_female.png", width = 6, height = 4)
plot_word_single('arrives/verb', 'male')
ggsave("arrives_male.png", width = 6, height = 4)
plot_word_single('takes/verb', 'male')
ggsave("takes_male.png", width = 6, height = 4)
plot_word_single('help/verb', 'male')
ggsave("help_male.png", width = 6, height = 4)
plot_word_single('marry/verb', 'female')
ggsave("marry_female.png", width = 6, height = 4)
plot_word_single('attracted/verb', 'female')
ggsave("attracted_female.png", width = 6, height = 4)
plot_word_single('beautiful/adj', 'female')
ggsave("beautiful_female.png", width = 6, height = 4)
plot_word_single('attractive/adj', 'female')
ggsave("attractive_female.png", width = 6, height = 4)
plot_word_single('pregnant/adj', 'female')
ggsave("pregnant_female.png", width = 6, height = 4)
plot_word_single('best/adj', 'male')
ggsave("best_male.png", width = 6, height = 4)
ggsave("corrupt_male.png", width = 6, height = 4)
ggsave("best_male.png", width = 6, height = 4)
plot_word_single('corrupt/adj', 'male')
ggsave("corrupt_male.png", width = 6, height = 4)
plot_word_single('kill/verb', 'male')
ggsave("kill_male.png", width = 6, height = 4)
plot_word_single('romantic/adj', 'female')
ggsave("romantic_female.png", width = 6, height = 4)
plot_word_single('affair/noun', 'female')
ggsave("affair_female.png", width = 6, height = 4)
plot_word_single('young/adj', 'female')
ggsave("young_female.png", width = 6, height = 4)
plot_word_single('pregnant/adj', 'female')
ggsave("pregnant_female.png", width = 6, height = 4)
plot_word_single('married/adj', 'female')
ggsave("married_female.png", width = 6, height = 4)
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('adj', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('married/adj', 'female')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('adj', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('married/adj', 'female')
