gg$widths <- unit.pmax(mn2$widths, fn2$widths)
gg <- rbind(mn2, fn2, size = 'first')
mn2 <- ggplotGrob(mn)
fn2 <- ggplotGrob(fn)
gg <- rbind(mn2, fn2, size = 'first')
gg$widths <- unit.pmax(mn2$widths, fn2$widths)
grid.newpage()
grid.draw(gg)
grid.arrange(mn, fn)
grid.arrange(mn, fn)
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 2000)
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, 2000)
grid.arrange(mn, fn)
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 2000) +
theme_linedraw()
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 2000) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, 2000)
grid.arrange(mn, fn)
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 1800) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, 1800)
grid.arrange(mn, fn)
ll_bar <- function(pos = 'noun', n = 21){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 1800) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, 1800)
}
noun_plot <- ll_bar('noun')
noun_plot
ll_bar <- function(pos = 'noun', n = 21){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 1800) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, 1800)
grid.arrange(mn, fn)
}
ll_bar('noun')
ll_bar('verb')
ll_bar('verb', ylimit = 800)
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, 1800) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, 1800)
grid.arrange(mn, fn)
}
ll_bar('verb', ylimit = 800)
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit)
grid.arrange(mn, fn)
}
ll_bar('verb', ylimit = 800)
ll_bar('verb', ylimit = 700)
ll_bar('adj', ylimit = 1000)
ll_bar('adj', ylimit = 400)
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4', aes(fill = gender)
alpha = 0.7, color = 'black') + coord_flip() +
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit)
grid.arrange(mn, fn)
}
ll_bar('noun')
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = gender,
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_colour_manual(values = 'deepskyblue4')
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = gender,
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_colour_manual(values = 'deepskyblue4')
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit)
grid.arrange(mn, fn)
}
ll_bar('noun')
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_colour_manual(values = 'deepskyblue4')
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit)
grid.arrange(mn, fn)
}
ll_bar('noun')
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_colour_manual(values = c('male' = 'deepskyblue4'))
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit)
grid.arrange(mn, fn)
}
ll_bar('noun')
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ggtitle('Male')
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit) + ggtitle('Female')
grid.arrange(mn, fn)
}
ll_bar('noun')
library(wordcloud)
male
male_np
wordcloud(words = male_np$word, freq = male_np$llr)
wordcloud(words = male_np$word, freq = male_np$llr)
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange4')
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
mwc = wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
mwc = wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
mwc
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deeoskyblue3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
```{r, fig.width = 7, fig.height = 7, dpi= 300}
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
```{r, fig.width = 8, fig.height = 5, dpi= 300}
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
```{r, fig.width = 7, fig.height = 4, dpi= 300}
ll_bar('noun')
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
graph = grapherdemo(21, token_filter3('all', 1940, 2020, token.all))
ll_bar <- function(pos = 'noun', n = 21, ylimit = 1800){
graph = grapherdemo(21, token_filter3(pos, 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:(n-1)]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
mn = ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + ylim(0, ylimit) +
theme_linedraw() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ggtitle('Male')
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
fn = ggplot(female_np, aes(x = reorder(word, -llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') + theme_linedraw() +
ylim(0, ylimit) + ggtitle('Female')
par(mfrow=c(1,2))
wordcloud(words = male_np$word, freq = male_np$llr, colors = 'darkorange3')
wordcloud(words = female_np$word, freq = male_np$llr, colors = 'deepskyblue3')
grid.arrange(mn, fn)
}
ll_bar('noun')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('kill/verb', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapherdemo(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('kill/verb', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('kill/verb', 'male')
plot_word_single <- function(term, gender){
male = data.frame()
for(i in 0 : 7){ #for loop to run across decades
male_temp <- data.frame()
j = 1940 + 10*i
male_temp = grapher(paste(gender,'/characters', sep=''), 10 , token_filter('all', j, token.all), "LOGLIK")[[3]][] #get PPMI data for given decade
#male_ind$rank = 1 : nrow(male_ind) #rank words - redundant
male_temp <- male_temp %>% filter(names == term) #filter term given
male_temp$year = j #attach year info
male_temp$gender = "male" #assign gender
names(male_temp)[2] = 'll'
male_ind = male_temp
male = rbind(male, male_ind)
}
male = male %>% select(year, ll)
#plot
ggplot(male, aes(x = year, y = ll)) +
geom_point(color = "black") +
geom_line(size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1, alpha = 0.1) + theme_minimal() +
ylab("Loglikelihood") + ggtitle(paste(gender, term, sep = '-')) +
theme(axis.text = element_text(color = "black", size = 12), axis.title = element_text(color = "black", size = 14),
legend.text = element_text(color = "black", size = 12), legend.title = element_text(color = "black", size = 14),
panel.grid.major = element_line(colour = "grey50", size = 0.3), panel.grid.minor = element_line(colour = "grey50", size = 0.3))
#facet_wrap(~ gender)
}
plot_word_single('kill/verb', 'male')
