#theme: united
#highlight: tango
library(tidyverse)
library(quanteda) #for text cleaning
library(igraph) #for creating graphs
library(visNetwork) #for visualizing graphs
source("calculatecoocstats.R") #calculate co-occurrence statistics
source("grapher.R") #create graph
source("graphervf.R") #grapher 2
source("grapherdemo.R") #other grapher
source("token_filter.R") #filter tokens
load("token.all.RData")
library(rvest)
head(token.all, 5)
#convert tokens to all lower
token.all <- tokens_tolower(token.all) #convert all tokens to lower
token.all = token.all %>% tokens_remove(c('ex/adj', 'ex/noun'))
#plot the number of movies in each decade
sents_df = data.frame(decade = as.character(),
n_sents = as.numeric())
for(i in seq(1940, 2010, 10)){
n_sents = ndoc(tokens_subset(token.all, decade == i))
sents_t = data.frame(decade = as.character(i),
n_sents = as.numeric(n_sents))
sents_df = rbind(sents_df, sents_t)
}
ggplot(sents_df, aes(x = decade, n_sents)) +
geom_bar(stat = 'identity', width = 0.5, color = 'black',
position = position_dodge(width = 0.4)) +
theme_linedraw() + ylab('no. of sentences')
#plot number of words per sentence across decades
words_df = data.frame(decade = as.character(),
n_words = as.numeric())
for(i in seq(1940, 2010, 10)){
n_words = sum(ntoken(tokens_subset(token.all, decade == i)))
words_t = data.frame(decade = as.character(i),
n_words = as.numeric(n_words))
words_df = rbind(words_df, words_t)
}
words_df$wordspsents = words_df$n_words/sents_df$n_sents
ggplot(words_df, aes(x = decade, wordspsents)) +
geom_bar(stat = 'identity', width = 0.5, color = 'black',
position = position_dodge(width = 0.4)) +
theme_linedraw() + ylab('words per sentence')
graph = grapherdemo(21, token_filter3('all', 1940, 2020, token.all)) #create graph
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
#visIgraph(g) #%>% visNodes(font = list(size = 26))  #display
plot(g, vertex.size = 0.4, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE, layout = coords_demo)
plot(g, vertex.size = 0.4, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g, vertex.size = 0.8, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
graph = grapherdemo(21, token_filter3('all', 1940, 2020, token.all)) #create graph
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
#visIgraph(g) #%>% visNodes(font = list(size = 26))  #display
plot(g, vertex.size = 0.8, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
graph = grapherdemo(21, token_filter3('all', 1940, 2020, token.all)) #create graph
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
#visIgraph(g) #%>% visNodes(font = list(size = 26))  #display
plot(g, vertex.size = 2, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g, vertex.size = 2.5, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g, vertex.size = 3.5, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g, vertex.size = 3.2, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
#Top secondary co-occurences
#male
dmat = distances(graph[[1]], v=V(graph[[1]]), to='male/characters') #compute path weights
male_c = dmat[, 'male/characters'] #secondary to male
male_c = sort(male_c, decreasing = T)[1:21] #sort top 20
#female
fmat = distances(graph[[1]], v=V(graph[[1]]), to='female/characters') #compute path weights
female_c = fmat[, 'female/characters'] #secondary to male
female_c = sort(female_c, decreasing = T)[1:21] #sort top 20
#store all secondary
allc = c(male_c, female_c)
allc = sort(allc, decreasing = T) #sort decreasing
#edge colors
all_edges = ends(g, es = E(g), names = T) #store all edges
all_edges = as.data.frame(all_edges) #convert to dataframe
#check
all_edges$V2[all_edges$V1 == 'female/characters']
#male_c = male_c[names(male_c != 'beach/noun')]
male.sec_bool <- all_edges$V2 %in% names(male_c)  #create bool of all male secondary co-oocs
female.sec_bool <- all_edges$V2 %in% names(female_c)  #create bool of all female secondary co-oocs
edge.start <- ends(g, es = E(g), names = F)[,1]
male_ps = intersect(all_edges$V1[male.sec_bool], names(male_primary))
female_ps = intersect(all_edges$V1[female.sec_bool], names(female_primary))
all_edges$V1[female.sec_bool]
#color only primary tropes that have a path
#mprimary_tropes = c('is/verb', 'friend/noun', 'takes/verb', 'tells/verb',
#               'kill/verb', 'agent/noun', 'help/noun',
#               'brother/noun', 'former/adj')
mprimary_tropes = male_ps
mprimary_tropes = mprimary_tropes[mprimary_tropes != 'female/characters']
m_pcolor = paste('male/characters', mprimary_tropes)
all_edges$V3 = paste(all_edges$V1, all_edges$V2)
mp_bool = all_edges$V3 %in% m_pcolor
#fprimary_tropes = c('love/noun', 'marriage/noun', 'relationship/noun',
#               'tells/verb')
fprimary_tropes = female_ps
f_pcolor = paste('female/characters', fprimary_tropes)
all_edges$V3 = paste(all_edges$V1, all_edges$V2)
all_edges$V1[all_edges$V2 == 'tells/verb']
fp_bool = all_edges$V3 %in% f_pcolor
E(g)$color <-  adjustcolor('grey', alpha=0.9)
E(g)$color <-  ifelse(mp_bool == TRUE, V(g)$color[edge.start],
ifelse(fp_bool == TRUE, V(g)$color[edge.start],
ifelse(male.sec_bool == TRUE, V(g)$color[edge.start],
ifelse(female.sec_bool == TRUE, V(g)$color[edge.start],
adjustcolor('grey', alpha=0.4)))))
V(g)$color <- ifelse(V(g)$name == c('male/characters'), adjustcolor('cornflowerblue', alpha = 0.9),
ifelse(V(g)$name %in% c('female/characters'), adjustcolor('orange', alpha = 0.9),
ifelse(V(g)$name %in% c(intersect(mprimary_tropes, fprimary_tropes)), adjustcolor('purple', alpha = 0.9),
ifelse(V(g)$name %in% mprimary_tropes, adjustcolor('cornflowerblue', alpha = 0.9),
ifelse(V(g)$name %in% fprimary_tropes, adjustcolor('orange', alpha = 0.9),
ifelse(V(g)$name %in% c(names(male_c), names(female_c)), adjustcolor('darkgrey', alpha = 0.9),
adjustcolor('grey', alpha = 0.2)))))))
#V(g)$color <- when(V(g)$name %in% 'male/character', adjustcolor('red', alpha = 0.8))
#visIgraph(g)
plot(g, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
#V(g)$color <- when(V(g)$name %in% 'male/character', adjustcolor('red', alpha = 0.8))
#visIgraph(g)
plot(g, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
V(g)$color <- ifelse(V(g)$name == c('male/characters'), adjustcolor('cornflowerblue', alpha = 0.9),
ifelse(V(g)$name %in% c('female/characters'), adjustcolor('orange', alpha = 0.9),
ifelse(V(g)$name %in% c(intersect(mprimary_tropes, fprimary_tropes)), adjustcolor('purple', alpha = 0.9),
ifelse(V(g)$name %in% mprimary_tropes, adjustcolor('cornflowerblue', alpha = 0.9),
ifelse(V(g)$name %in% fprimary_tropes, adjustcolor('orange', alpha = 0.9),
ifelse(V(g)$name %in% c(names(male_c), names(female_c)), adjustcolor('darkgrey', alpha = 0.9),
adjustcolor('grey', alpha = 0.1)))))))
#V(g)$color <- when(V(g)$name %in% 'male/character', adjustcolor('red', alpha = 0.8))
#visIgraph(g)
plot(g, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
knitr::opts_chunk$set(echo = TRUE)
#theme: united
#highlight: tango
library(tidyverse)
library(quanteda) #for text cleaning
library(igraph) #for creating graphs
library(visNetwork) #for visualizing graphs
source("calculatecoocstats.R") #calculate co-occurrence statistics
source("grapher.R") #create graph
source("graphervf.R") #grapher 2
source("grapherdemo.R") #other grapher
source("token_filter.R") #filter tokens
load("token.all.RData")
library(rvest)
head(token.all, 5)
#convert tokens to all lower
token.all <- tokens_tolower(token.all) #convert all tokens to lower
token.all = token.all %>% tokens_remove(c('ex/adj', 'ex/noun'))
#plot the number of movies in each decade
sents_df = data.frame(decade = as.character(),
n_sents = as.numeric())
for(i in seq(1940, 2010, 10)){
n_sents = ndoc(tokens_subset(token.all, decade == i))
sents_t = data.frame(decade = as.character(i),
n_sents = as.numeric(n_sents))
sents_df = rbind(sents_df, sents_t)
}
ggplot(sents_df, aes(x = decade, n_sents)) +
geom_bar(stat = 'identity', width = 0.5, color = 'black',
position = position_dodge(width = 0.4)) +
theme_linedraw() + ylab('no. of sentences')
#plot number of words per sentence across decades
words_df = data.frame(decade = as.character(),
n_words = as.numeric())
for(i in seq(1940, 2010, 10)){
n_words = sum(ntoken(tokens_subset(token.all, decade == i)))
words_t = data.frame(decade = as.character(i),
n_words = as.numeric(n_words))
words_df = rbind(words_df, words_t)
}
words_df$wordspsents = words_df$n_words/sents_df$n_sents
ggplot(words_df, aes(x = decade, wordspsents)) +
geom_bar(stat = 'identity', width = 0.5, color = 'black',
position = position_dodge(width = 0.4)) +
theme_linedraw() + ylab('words per sentence')
#add shiny toggle secondary, shiny toggle nodes
graph_demo = grapherdemo(5, token_filter3('all', 1940, 2020, token.all))
g_demo = graph_demo[[1]]
#tkplot(g_demo) #GUI to adjust coordinates of vertices
#coords_demo <- tkplot.getcoords(1) #save coordinates to an object
#save(coords_demo, file = 'coords_demo.RData') #save object
load(file= 'coords_demo.RData')
plot(g_demo, vertex.label.cex = 0.6, vertex.label.dist = 0,
edge.curved=FALSE, layout = coords_demo)
graph = grapherdemo(21, token_filter3('all', 1940, 2020, token.all)) #create graph
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
#visIgraph(g) #%>% visNodes(font = list(size = 26))  #display
plot(g, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
#Top secondary co-occurences
#male
dmat = distances(graph[[1]], v=V(graph[[1]]), to='male/characters') #compute path weights
male_c = dmat[, 'male/characters'] #secondary to male
male_c = sort(male_c, decreasing = T)[1:21] #sort top 20
#female
fmat = distances(graph[[1]], v=V(graph[[1]]), to='female/characters') #compute path weights
female_c = fmat[, 'female/characters'] #secondary to male
female_c = sort(female_c, decreasing = T)[1:21] #sort top 20
#store all secondary
allc = c(male_c, female_c)
allc = sort(allc, decreasing = T) #sort decreasing
#edge colors
all_edges = ends(g, es = E(g), names = T) #store all edges
all_edges = as.data.frame(all_edges) #convert to dataframe
#check
all_edges$V2[all_edges$V1 == 'female/characters']
#male_c = male_c[names(male_c != 'beach/noun')]
male.sec_bool <- all_edges$V2 %in% names(male_c)  #create bool of all male secondary co-oocs
female.sec_bool <- all_edges$V2 %in% names(female_c)  #create bool of all female secondary co-oocs
edge.start <- ends(g, es = E(g), names = F)[,1]
male_ps = intersect(all_edges$V1[male.sec_bool], names(male_primary))
female_ps = intersect(all_edges$V1[female.sec_bool], names(female_primary))
all_edges$V1[female.sec_bool]
#color only primary tropes that have a path
#mprimary_tropes = c('is/verb', 'friend/noun', 'takes/verb', 'tells/verb',
#               'kill/verb', 'agent/noun', 'help/noun',
#               'brother/noun', 'former/adj')
mprimary_tropes = male_ps
mprimary_tropes = mprimary_tropes[mprimary_tropes != 'female/characters']
m_pcolor = paste('male/characters', mprimary_tropes)
all_edges$V3 = paste(all_edges$V1, all_edges$V2)
mp_bool = all_edges$V3 %in% m_pcolor
#fprimary_tropes = c('love/noun', 'marriage/noun', 'relationship/noun',
#               'tells/verb')
fprimary_tropes = female_ps
f_pcolor = paste('female/characters', fprimary_tropes)
all_edges$V3 = paste(all_edges$V1, all_edges$V2)
all_edges$V1[all_edges$V2 == 'tells/verb']
fp_bool = all_edges$V3 %in% f_pcolor
E(g)$color <-  adjustcolor('grey', alpha=0.9)
E(g)$color <-  ifelse(mp_bool == TRUE, V(g)$color[edge.start],
ifelse(fp_bool == TRUE, V(g)$color[edge.start],
ifelse(male.sec_bool == TRUE, V(g)$color[edge.start],
ifelse(female.sec_bool == TRUE, V(g)$color[edge.start],
adjustcolor('grey', alpha=0.4)))))
V(g)$color <- ifelse(V(g)$name == c('male/characters'), adjustcolor('cornflowerblue', alpha = 0.9),
ifelse(V(g)$name %in% c('female/characters'), adjustcolor('orange', alpha = 0.9),
ifelse(V(g)$name %in% c(intersect(mprimary_tropes, fprimary_tropes)), adjustcolor('purple', alpha = 0.9),
ifelse(V(g)$name %in% mprimary_tropes, adjustcolor('cornflowerblue', alpha = 0.9),
ifelse(V(g)$name %in% fprimary_tropes, adjustcolor('orange', alpha = 0.9),
ifelse(V(g)$name %in% c(names(male_c), names(female_c)), adjustcolor('darkgrey', alpha = 0.9),
adjustcolor('grey', alpha = 0.1)))))))
#V(g)$color <- when(V(g)$name %in% 'male/character', adjustcolor('red', alpha = 0.8))
#visIgraph(g)
plot(g, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
keep_nodes = names(c(allc, male_primary, female_primary))
keep_nodes = c(keep_nodes, 'male/characters', 'female/characters')
remove_nodes = names(V(g))[!names(V(g)) %in% keep_nodes]
g_trim <- g - remove_nodes
plot(g_trim, vertex.size = 3, vertex.label = NA,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g_trim, vertex.size = 3, vertex.label.cex = 0.5,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g_trim, vertex.size = 3, vertex.label.cex = 0.8,
vertex.label.dist = 0,
edge.curved=FALSE)
plot(g_trim, vertex.size = 3, vertex.label.cex = 0.6,
vertex.label.dist = 0,
edge.curved=FALSE)
male_primary
graph = grapherdemo(21, token_filter3('noun', 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary
male_primary = male_primary[male_primary != 'female/characters]
male_primary = male_primary[male_primary != 'female/characters']
male_primary = male_primary[male_primary != 'female/characters']
male_primary
male_primary = male_primary[1:20]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np
ggplot(male_np, aes(x = 'word', y = 'llr')) +
geom_bar(stat = 'identity')
ggplot(words_df, aes(x = decade, y = wordspsents)) +
geom_bar(stat = 'identity', width = 0.5, color = 'black',
position = position_dodge(width = 0.4)) +
theme_linedraw() + ylab('words per sentence')
ggplot(male_np, aes(x = as.factor('word'), y = 'llr')) +
geom_bar(stat = 'identity')
male_np
ggplot(male_np, aes(x = as.factor('word'), y = 'llr')) +
geom_bar(stat = 'identity') + coord_flip
ggplot(male_np, aes(x = as.factor('word'), y = 'llr')) +
geom_bar(stat = 'identity') + coord_flip()
male_np
male_np = data.frame(word = names(male_primary), llr = seq(1:20))
male_np
ggplot(male_np, aes(x = as.factor('word'), y = 'llr')) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(x = 'word'), y = 'llr')) +
ggplot(male_np, aes(x = 'word', y = 'llr')) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(x = 'word', y = 'llr')) +
geom_col(stat = 'identity') + coord_flip()
ggplot(male_np, aes(x = 'word', y = 'llr')) +
geom_col()
df <- data.frame(
supp = rep(c("VC", "OJ"), each = 3),
dose = rep(c("D0.5", "D1", "D2"), 2),
len = c(6.8, 15, 33, 4.2, 10, 29.5)
)
head(df)
p <- ggplot(df, aes(x = dose, y = len))+
geom_col(aes(fill = supp), width = 0.7)
p
head(df)
p <- ggplot(male_np, aes(x = word, y = llr))+
geom_col(aes(fill = supp), width = 0.7)
p
p <- ggplot(male_np, aes(x = word, y = llr))+
geom_col(width = 0.7)
p
p <- ggplot(male_np, aes(x = word, y = llr))+
geom_bar(stat = 'identity')
p
p <- ggplot(male_np, aes(x = word, y = llr))+
geom_bar(stat = 'identity') + coord_flip()
p
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np
ggplot(male_np, aes(x = word, y = llr))+
geom_bar(stat = 'identity') + coord_flip()
male_primary = male_primary[male_primary != 'female/characters']
male_primary = male_primary[1:20]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np
ggplot(male_np, aes(x = word, y = llr))+
geom_bar(stat = 'identity') + coord_flip()
[male_primary != 'female/characters']
male_primary != 'female/characters'
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:20]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np
ggplot(male_np, aes(x = word, y = llr))+
geom_bar(stat = 'identity') + coord_flip()
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary
male_primary = male_primary[1:20]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_primary = graph[[3]] #20 male primary nodes
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:20]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np
ggplot(male_np, aes(x = word, y = llr))+
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(reorder(x = word, y = llr)))+
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(reorder(x = word, y = llr))) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(x = reorder(word) y = llr)) +
ggplot(male_np, aes(x = reorder(word) y = llr)) +
ggplot(male_np, aes(x = reorder(word) y = llr)) +
ggplot(male_np, aes(x = reorder(word), y = llr)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkblue') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue', alpha = 0.5) + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4', alpha = 0.5) + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4', alpha = 0.7) + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'white') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'darkgray') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip()
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
ylab('word') + xlab('loglikelihood ratio')
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
geom_bar(stat = 'identity', fill = 'darkorange,
geom_bar(stat = 'identity', fill = 'darkorange,
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
all_np = rbind(male_np, female_np)
female_np$gender = 'female
female_np$gender = 'female'
female_np$gender = 'female'
male_np$gender = 'male'
all_np = rbind(male_np, female_np)
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') +
facet_wrap(~ gender)
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') +
facet_grid(~ gender)
ggplot(all_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') +
facet_grid(~ gender)
ggplot(all_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', aes(fill = gender),
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio') +
facet_wrap(~ gender)
graph = grapherdemo(21, token_filter3('noun', 1940, 2020, token.all))
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
female_primary = female_primary[names(female_primary) != 'male/characters']
female_primary = female_primary[1:20]
female_np = data.frame(word = names(female_primary), llr = female_primary)
female_np$gender = 'female'
ggplot(female_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'darkorange3',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
female_primary = graph[[2]] #20 female primary nodes
male_primary = graph[[3]] #20 male primary nodes
g = graph[[1]] #save graph as g
male_primary = male_primary[names(male_primary) != 'female/characters']
male_primary = male_primary[1:20]
male_np = data.frame(word = names(male_primary), llr = male_primary)
male_np$gender = 'male'
ggplot(male_np, aes(x = reorder(word, llr), y = llr)) +
geom_bar(stat = 'identity', fill = 'deepskyblue4',
alpha = 0.7, color = 'black') + coord_flip() +
xlab('word') + ylab('loglikelihood ratio')
gsub("\\[\].*", "", "hello\bruh")
gsub("\\\.*", "", "hello\bruh")
gsub("\\.*", "", "hello\bruh")
gsub("\\.*", "", "hello.bruh")
gsub("\\..*", "", "hello.bruh")
gsub("\\,.*", "", "hello,bruh")
gsub("\\,.*", "", "hello,bruh")
gsub("\\"\".*", "", "hello,bruh")
